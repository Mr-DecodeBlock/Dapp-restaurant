{
  "contractName": "EatOutToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "contract CEth",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "supply",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getExchangeAndSupplyRateInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"contract CEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeAndSupplyRateInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cTokenAmount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/yousonghou/Desktop/bc rest client/contracts/EatOutToken.sol\":\"EatOutToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yousonghou/Desktop/bc rest client/contracts/EatOutToken.sol\":{\"keccak256\":\"0xd7846211bc24e214c09c2b7519a925442514b4def3acc0f153b767c8478b7ade\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e918fb3bec374415873365dd7ce9b4bbf438ffedf11bcda70a1bfe15df2195\",\"dweb:/ipfs/QmeMD3FTExGZZd4jh2MXTBnpXDQ1648zQtofSYgbY9fhqA\"]},\"/Users/yousonghou/Desktop/bc rest client/contracts/interface/compound.sol\":{\"keccak256\":\"0xb605b694487f30c2c918da16b67bfe1d42aa19e166eb5d87b56c9c0dfdbe312f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543810007a4bf0b76a1a111575abcbbdbe7cf001404980e139e5b573ad8adb3f\",\"dweb:/ipfs/QmZCbmsooTAFSoN8a9o5YwggDeUruCHKqo5ydTv1LYcam2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001ee538038062001ee58339818101604052810190620000379190620001e6565b6040518060400160405280600c81526020017f456174204f757420436f696e00000000000000000000000000000000000000008152506040518060400160405280600481526020017f454f5443000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb9291906200011f565b508060049080519060200190620000d49291906200011f565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002c5565b8280546200012d9062000246565b90600052602060002090601f0160209004810192826200015157600085556200019d565b82601f106200016c57805160ff19168380011785556200019d565b828001600101855582156200019d579182015b828111156200019c5782518255916020019190600101906200017f565b5b509050620001ac9190620001b0565b5090565b5b80821115620001cb576000816000905550600101620001b1565b5090565b600081519050620001e081620002ab565b92915050565b600060208284031215620001f957600080fd5b60006200020984828501620001cf565b91505092915050565b60006200021f8262000226565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200025f57607f821691505b602082108114156200027657620002756200027c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620002b68162000212565b8114620002c257600080fd5b50565b611c1080620002d56000396000f3fe6080604052600436106100f75760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb14610340578063db006a751461037d578063dd62ed3e146103a6578063f2f55e64146103e3576100fe565b806370a08231146102705780638eae8854146102ad57806395d89b41146102d8578063a457c2d714610303576100fe565b806323b872dd116100c657806323b872dd146101a0578063313ce567146101dd578063395093511461020857806369e527da14610245576100fe565b8063047fc9aa1461010357806306fdde031461010d578063095ea7b31461013857806318160ddd14610175576100fe565b366100fe57005b600080fd5b61010b61040f565b005b34801561011957600080fd5b506101226104aa565b60405161012f91906117f2565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a9190611345565b61053c565b60405161016c91906117bc565b60405180910390f35b34801561018157600080fd5b5061018a61055a565b6040516101979190611934565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c291906112f6565b610564565b6040516101d491906117bc565b60405180910390f35b3480156101e957600080fd5b506101f261065c565b6040516101ff9190611978565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190611345565b610665565b60405161023c91906117bc565b60405180910390f35b34801561025157600080fd5b5061025a610711565b60405161026791906117d7565b60405180910390f35b34801561027c57600080fd5b5061029760048036038101906102929190611291565b610737565b6040516102a49190611934565b60405180910390f35b3480156102b957600080fd5b506102c261077f565b6040516102cf9190611934565b60405180910390f35b3480156102e457600080fd5b506102ed610831565b6040516102fa91906117f2565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190611345565b6108c3565b60405161033791906117bc565b60405180910390f35b34801561034c57600080fd5b5061036760048036038101906103629190611345565b6109ae565b60405161037491906117bc565b60405180910390f35b34801561038957600080fd5b506103a4600480360381019061039f9190611381565b6109cc565b005b3480156103b257600080fd5b506103cd60048036038101906103c891906112ba565b610abe565b6040516103da9190611934565b60405180910390f35b3480156103ef57600080fd5b506103f8610b45565b60405161040692919061194f565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631249c58b346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561047957600080fd5b505af115801561048d573d6000803e3d6000fd5b50505050506104a8336064346104a39190611a05565b610c94565b565b6060600380546104b990611b0b565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590611b0b565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050505050905090565b6000610550610549610df4565b8484610dfc565b6001905092915050565b6000600254905090565b6000610571848484610fc7565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105bc610df4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390611874565b60405180910390fd5b61065085610648610df4565b858403610dfc565b60019150509392505050565b60006012905090565b6000610707610672610df4565b848460016000610680610df4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070291906119af565b610dfc565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107dc91906117a1565b60206040518083038186803b1580156107f457600080fd5b505afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c91906113aa565b905090565b60606004805461084090611b0b565b80601f016020809104026020016040519081016040528092919081815260200182805461086c90611b0b565b80156108b95780601f1061088e576101008083540402835291602001916108b9565b820191906000526020600020905b81548152906001019060200180831161089c57829003601f168201915b5050505050905090565b600080600160006108d2610df4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561098f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610986906118f4565b60405180910390fd5b6109a361099a610df4565b85858403610dfc565b600191505092915050565b60006109c26109bb610df4565b8484610fc7565b6001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db006a75836040518263ffffffff1660e01b8152600401610a299190611934565b602060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b91906113aa565b14610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab290611894565b60405180910390fd5b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea91906113aa565b9150600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae9d70b06040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c5657600080fd5b505af1158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e91906113aa565b90509091565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfb90611914565b60405180910390fd5b610d1060008383611248565b8060026000828254610d2291906119af565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d7791906119af565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ddc9190611934565b60405180910390a3610df06000838361124d565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e63906118d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610edc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed390611834565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610fba9190611934565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611037576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102e906118b4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611814565b60405180910390fd5b6110b2838383611248565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90611854565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111cb91906119af565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161122f9190611934565b60405180910390a361124284848461124d565b50505050565b505050565b505050565b60008135905061126181611bac565b92915050565b60008135905061127681611bc3565b92915050565b60008151905061128b81611bc3565b92915050565b6000602082840312156112a357600080fd5b60006112b184828501611252565b91505092915050565b600080604083850312156112cd57600080fd5b60006112db85828601611252565b92505060206112ec85828601611252565b9150509250929050565b60008060006060848603121561130b57600080fd5b600061131986828701611252565b935050602061132a86828701611252565b925050604061133b86828701611267565b9150509250925092565b6000806040838503121561135857600080fd5b600061136685828601611252565b925050602061137785828601611267565b9150509250929050565b60006020828403121561139357600080fd5b60006113a184828501611267565b91505092915050565b6000602082840312156113bc57600080fd5b60006113ca8482850161127c565b91505092915050565b6113dc81611a5f565b82525050565b6113eb81611a71565b82525050565b6113fa81611ab4565b82525050565b600061140b82611993565b611415818561199e565b9350611425818560208601611ad8565b61142e81611b9b565b840191505092915050565b600061144660238361199e565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114ac60228361199e565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061151260268361199e565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061157860288361199e565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115de600d8361199e565b91507f72656465656d206661696c6564000000000000000000000000000000000000006000830152602082019050919050565b600061161e60258361199e565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061168460248361199e565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116ea60258361199e565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611750601f8361199e565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61178c81611a9d565b82525050565b61179b81611aa7565b82525050565b60006020820190506117b660008301846113d3565b92915050565b60006020820190506117d160008301846113e2565b92915050565b60006020820190506117ec60008301846113f1565b92915050565b6000602082019050818103600083015261180c8184611400565b905092915050565b6000602082019050818103600083015261182d81611439565b9050919050565b6000602082019050818103600083015261184d8161149f565b9050919050565b6000602082019050818103600083015261186d81611505565b9050919050565b6000602082019050818103600083015261188d8161156b565b9050919050565b600060208201905081810360008301526118ad816115d1565b9050919050565b600060208201905081810360008301526118cd81611611565b9050919050565b600060208201905081810360008301526118ed81611677565b9050919050565b6000602082019050818103600083015261190d816116dd565b9050919050565b6000602082019050818103600083015261192d81611743565b9050919050565b60006020820190506119496000830184611783565b92915050565b60006040820190506119646000830185611783565b6119716020830184611783565b9392505050565b600060208201905061198d6000830184611792565b92915050565b600081519050919050565b600082825260208201905092915050565b60006119ba82611a9d565b91506119c583611a9d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119fa576119f9611b3d565b5b828201905092915050565b6000611a1082611a9d565b9150611a1b83611a9d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a5457611a53611b3d565b5b828202905092915050565b6000611a6a82611a7d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611abf82611ac6565b9050919050565b6000611ad182611a7d565b9050919050565b60005b83811015611af6578082015181840152602081019050611adb565b83811115611b05576000848401525b50505050565b60006002820490506001821680611b2357607f821691505b60208210811415611b3757611b36611b6c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611bb581611a5f565b8114611bc057600080fd5b50565b611bcc81611a9d565b8114611bd757600080fd5b5056fea26469706673582212200fabd011323a9fc92360c290a46f7dec131a40776c0f29674a2bcaa06649e54f64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100f75760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb14610340578063db006a751461037d578063dd62ed3e146103a6578063f2f55e64146103e3576100fe565b806370a08231146102705780638eae8854146102ad57806395d89b41146102d8578063a457c2d714610303576100fe565b806323b872dd116100c657806323b872dd146101a0578063313ce567146101dd578063395093511461020857806369e527da14610245576100fe565b8063047fc9aa1461010357806306fdde031461010d578063095ea7b31461013857806318160ddd14610175576100fe565b366100fe57005b600080fd5b61010b61040f565b005b34801561011957600080fd5b506101226104aa565b60405161012f91906117f2565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a9190611345565b61053c565b60405161016c91906117bc565b60405180910390f35b34801561018157600080fd5b5061018a61055a565b6040516101979190611934565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c291906112f6565b610564565b6040516101d491906117bc565b60405180910390f35b3480156101e957600080fd5b506101f261065c565b6040516101ff9190611978565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190611345565b610665565b60405161023c91906117bc565b60405180910390f35b34801561025157600080fd5b5061025a610711565b60405161026791906117d7565b60405180910390f35b34801561027c57600080fd5b5061029760048036038101906102929190611291565b610737565b6040516102a49190611934565b60405180910390f35b3480156102b957600080fd5b506102c261077f565b6040516102cf9190611934565b60405180910390f35b3480156102e457600080fd5b506102ed610831565b6040516102fa91906117f2565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190611345565b6108c3565b60405161033791906117bc565b60405180910390f35b34801561034c57600080fd5b5061036760048036038101906103629190611345565b6109ae565b60405161037491906117bc565b60405180910390f35b34801561038957600080fd5b506103a4600480360381019061039f9190611381565b6109cc565b005b3480156103b257600080fd5b506103cd60048036038101906103c891906112ba565b610abe565b6040516103da9190611934565b60405180910390f35b3480156103ef57600080fd5b506103f8610b45565b60405161040692919061194f565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631249c58b346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561047957600080fd5b505af115801561048d573d6000803e3d6000fd5b50505050506104a8336064346104a39190611a05565b610c94565b565b6060600380546104b990611b0b565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590611b0b565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050505050905090565b6000610550610549610df4565b8484610dfc565b6001905092915050565b6000600254905090565b6000610571848484610fc7565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105bc610df4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390611874565b60405180910390fd5b61065085610648610df4565b858403610dfc565b60019150509392505050565b60006012905090565b6000610707610672610df4565b848460016000610680610df4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070291906119af565b610dfc565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107dc91906117a1565b60206040518083038186803b1580156107f457600080fd5b505afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c91906113aa565b905090565b60606004805461084090611b0b565b80601f016020809104026020016040519081016040528092919081815260200182805461086c90611b0b565b80156108b95780601f1061088e576101008083540402835291602001916108b9565b820191906000526020600020905b81548152906001019060200180831161089c57829003601f168201915b5050505050905090565b600080600160006108d2610df4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561098f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610986906118f4565b60405180910390fd5b6109a361099a610df4565b85858403610dfc565b600191505092915050565b60006109c26109bb610df4565b8484610fc7565b6001905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db006a75836040518263ffffffff1660e01b8152600401610a299190611934565b602060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b91906113aa565b14610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab290611894565b60405180910390fd5b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea91906113aa565b9150600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae9d70b06040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c5657600080fd5b505af1158015610c6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8e91906113aa565b90509091565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfb90611914565b60405180910390fd5b610d1060008383611248565b8060026000828254610d2291906119af565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d7791906119af565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ddc9190611934565b60405180910390a3610df06000838361124d565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e63906118d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610edc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed390611834565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610fba9190611934565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611037576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102e906118b4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611814565b60405180910390fd5b6110b2838383611248565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90611854565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111cb91906119af565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161122f9190611934565b60405180910390a361124284848461124d565b50505050565b505050565b505050565b60008135905061126181611bac565b92915050565b60008135905061127681611bc3565b92915050565b60008151905061128b81611bc3565b92915050565b6000602082840312156112a357600080fd5b60006112b184828501611252565b91505092915050565b600080604083850312156112cd57600080fd5b60006112db85828601611252565b92505060206112ec85828601611252565b9150509250929050565b60008060006060848603121561130b57600080fd5b600061131986828701611252565b935050602061132a86828701611252565b925050604061133b86828701611267565b9150509250925092565b6000806040838503121561135857600080fd5b600061136685828601611252565b925050602061137785828601611267565b9150509250929050565b60006020828403121561139357600080fd5b60006113a184828501611267565b91505092915050565b6000602082840312156113bc57600080fd5b60006113ca8482850161127c565b91505092915050565b6113dc81611a5f565b82525050565b6113eb81611a71565b82525050565b6113fa81611ab4565b82525050565b600061140b82611993565b611415818561199e565b9350611425818560208601611ad8565b61142e81611b9b565b840191505092915050565b600061144660238361199e565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114ac60228361199e565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061151260268361199e565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061157860288361199e565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115de600d8361199e565b91507f72656465656d206661696c6564000000000000000000000000000000000000006000830152602082019050919050565b600061161e60258361199e565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061168460248361199e565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116ea60258361199e565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611750601f8361199e565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61178c81611a9d565b82525050565b61179b81611aa7565b82525050565b60006020820190506117b660008301846113d3565b92915050565b60006020820190506117d160008301846113e2565b92915050565b60006020820190506117ec60008301846113f1565b92915050565b6000602082019050818103600083015261180c8184611400565b905092915050565b6000602082019050818103600083015261182d81611439565b9050919050565b6000602082019050818103600083015261184d8161149f565b9050919050565b6000602082019050818103600083015261186d81611505565b9050919050565b6000602082019050818103600083015261188d8161156b565b9050919050565b600060208201905081810360008301526118ad816115d1565b9050919050565b600060208201905081810360008301526118cd81611611565b9050919050565b600060208201905081810360008301526118ed81611677565b9050919050565b6000602082019050818103600083015261190d816116dd565b9050919050565b6000602082019050818103600083015261192d81611743565b9050919050565b60006020820190506119496000830184611783565b92915050565b60006040820190506119646000830185611783565b6119716020830184611783565b9392505050565b600060208201905061198d6000830184611792565b92915050565b600081519050919050565b600082825260208201905092915050565b60006119ba82611a9d565b91506119c583611a9d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119fa576119f9611b3d565b5b828201905092915050565b6000611a1082611a9d565b9150611a1b83611a9d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a5457611a53611b3d565b5b828202905092915050565b6000611a6a82611a7d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611abf82611ac6565b9050919050565b6000611ad182611a7d565b9050919050565b60005b83811015611af6578082015181840152602081019050611adb565b83811115611b05576000848401525b50505050565b60006002820490506001821680611b2357607f821691505b60208210811415611b3757611b36611b6c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611bb581611a5f565b8114611bc057600080fd5b50565b611bcc81611a9d565b8114611bd757600080fd5b5056fea26469706673582212200fabd011323a9fc92360c290a46f7dec131a40776c0f29674a2bcaa06649e54f64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "206:812:0:-:0;;;266:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:5;1972;:13;;;;;;;;;;;;:::i;:::-;;2005:7;1995;:17;;;;;;;;;;;;:::i;:::-;;1906:113;;349:7:0::1;335:6;;:22;;;;;;;;;;;;;;;;;;266:98:::0;206:812;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:7:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:320::-;;761:1;755:4;751:12;741:22;;808:1;802:4;798:12;829:18;819:2;;885:4;877:6;873:17;863:27;;819:2;947;939:6;936:14;916:18;913:38;910:2;;;966:18;;:::i;:::-;910:2;731:269;;;;:::o;1006:180::-;1054:77;1051:1;1044:88;1151:4;1148:1;1141:15;1175:4;1172:1;1165:15;1192:122;1265:24;1283:5;1265:24;:::i;:::-;1258:5;1255:35;1245:2;;1304:1;1301;1294:12;1245:2;1235:79;:::o;206:812:0:-;;;;;;;",
  "deployedSourceMap": "206:812:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:127;;;:::i;:::-;;2084:98:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3172:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4814:478;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5687:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;241:18:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3336:125:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;777:112:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2295:102:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6386:405;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3664:172;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;895:121:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3894:149:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:204:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;433:127;478:6;;;;;;;;;;;:11;;;497:9;478:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:34;525:10;549:3;537:9;:15;;;;:::i;:::-;519:5;:34::i;:::-;433:127::o;2084:98:3:-;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;4289:12;:10;:12::i;:::-;4303:7;4312:6;4280:8;:39::i;:::-;4336:4;4329:11;;4181:166;;;;:::o;3172:106::-;3233:7;3259:12;;3252:19;;3172:106;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;5013:24;5040:11;:19;5052:6;5040:19;;;;;;;;;;;;;;;:33;5060:12;:10;:12::i;:::-;5040:33;;;;;;;;;;;;;;;;5013:60;;5111:6;5091:16;:26;;5083:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5196:57;5205:6;5213:12;:10;:12::i;:::-;5246:6;5227:16;:25;5196:8;:57::i;:::-;5281:4;5274:11;;;4814:478;;;;;:::o;3021:91::-;3079:5;3103:2;3096:9;;3021:91;:::o;5687:212::-;5775:4;5791:80;5800:12;:10;:12::i;:::-;5814:7;5860:10;5823:11;:25;5835:12;:10;:12::i;:::-;5823:25;;;;;;;;;;;;;;;:34;5849:7;5823:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5791:8;:80::i;:::-;5888:4;5881:11;;5687:212;;;;:::o;241:18:0:-;;;;;;;;;;;;;:::o;3336:125:3:-;3410:7;3436:9;:18;3446:7;3436:18;;;;;;;;;;;;;;;;3429:25;;3336:125;;;:::o;777:112:0:-;828:4;851:6;;;;;;;;;;;:16;;;876:4;851:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;844:38;;777:112;:::o;2295:102:3:-;2351:13;2383:7;2376:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2295:102;:::o;6386:405::-;6479:4;6495:24;6522:11;:25;6534:12;:10;:12::i;:::-;6522:25;;;;;;;;;;;;;;;:34;6548:7;6522:34;;;;;;;;;;;;;;;;6495:61;;6594:15;6574:16;:35;;6566:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6685:67;6694:12;:10;:12::i;:::-;6708:7;6736:15;6717:16;:34;6685:8;:67::i;:::-;6780:4;6773:11;;;6386:405;;;;:::o;3664:172::-;3750:4;3766:42;3776:12;:10;:12::i;:::-;3790:9;3801:6;3766:9;:42::i;:::-;3825:4;3818:11;;3664:172;;;;:::o;895:121:0:-;990:1;958:6;;;;;;;;;;;:13;;;972;958:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;950:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;895:121;:::o;3894:149:3:-;3983:7;4009:11;:18;4021:5;4009:18;;;;;;;;;;;;;;;:27;4028:7;4009:27;;;;;;;;;;;;;;;;4002:34;;3894:149;;;;:::o;566:204:0:-;624:17;643:15;685:6;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;670:43;;736:6;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;723:40;;566:204;;:::o;8254:389:3:-;8356:1;8337:21;;:7;:21;;;;8329:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8405:49;8434:1;8438:7;8447:6;8405:20;:49::i;:::-;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;;;;;8519:6;8497:9;:18;8507:7;8497:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8561:7;8540:37;;8557:1;8540:37;;;8570:6;8540:37;;;;;;:::i;:::-;;;;;;;;8588:48;8616:1;8620:7;8629:6;8588:19;:48::i;:::-;8254:389;;:::o;587:96:6:-;640:7;666:10;659:17;;587:96;:::o;9962:370:3:-;10110:1;10093:19;;:5;:19;;;;10085:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10190:1;10171:21;;:7;:21;;;;10163:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10272:6;10242:11;:18;10254:5;10242:18;;;;;;;;;;;;;;;:27;10261:7;10242:27;;;;;;;;;;;;;;;:36;;;;10309:7;10293:32;;10302:5;10293:32;;;10318:6;10293:32;;;;;;:::i;:::-;;;;;;;;9962:370;;;:::o;7265:713::-;7418:1;7400:20;;:6;:20;;;;7392:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7501:1;7480:23;;:9;:23;;;;7472:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7554:47;7575:6;7583:9;7594:6;7554:20;:47::i;:::-;7612:21;7636:9;:17;7646:6;7636:17;;;;;;;;;;;;;;;;7612:41;;7688:6;7671:13;:23;;7663:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7807:6;7791:13;:22;7771:9;:17;7781:6;7771:17;;;;;;;;;;;;;;;:42;;;;7857:6;7833:9;:20;7843:9;7833:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7896:9;7879:35;;7888:6;7879:35;;;7907:6;7879:35;;;;;;:::i;:::-;;;;;;;;7925:46;7945:6;7953:9;7964:6;7925:19;:46::i;:::-;7265:713;;;;:::o;10916:121::-;;;;:::o;11625:120::-;;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:143::-;;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;360:80;;;;:::o;446:262::-;;554:2;542:9;533:7;529:23;525:32;522:2;;;570:1;567;560:12;522:2;613:1;638:53;683:7;674:6;663:9;659:22;638:53;:::i;:::-;628:63;;584:117;512:196;;;;:::o;714:407::-;;;839:2;827:9;818:7;814:23;810:32;807:2;;;855:1;852;845:12;807:2;898:1;923:53;968:7;959:6;948:9;944:22;923:53;:::i;:::-;913:63;;869:117;1025:2;1051:53;1096:7;1087:6;1076:9;1072:22;1051:53;:::i;:::-;1041:63;;996:118;797:324;;;;;:::o;1127:552::-;;;;1269:2;1257:9;1248:7;1244:23;1240:32;1237:2;;;1285:1;1282;1275:12;1237:2;1328:1;1353:53;1398:7;1389:6;1378:9;1374:22;1353:53;:::i;:::-;1343:63;;1299:117;1455:2;1481:53;1526:7;1517:6;1506:9;1502:22;1481:53;:::i;:::-;1471:63;;1426:118;1583:2;1609:53;1654:7;1645:6;1634:9;1630:22;1609:53;:::i;:::-;1599:63;;1554:118;1227:452;;;;;:::o;1685:407::-;;;1810:2;1798:9;1789:7;1785:23;1781:32;1778:2;;;1826:1;1823;1816:12;1778:2;1869:1;1894:53;1939:7;1930:6;1919:9;1915:22;1894:53;:::i;:::-;1884:63;;1840:117;1996:2;2022:53;2067:7;2058:6;2047:9;2043:22;2022:53;:::i;:::-;2012:63;;1967:118;1768:324;;;;;:::o;2098:262::-;;2206:2;2194:9;2185:7;2181:23;2177:32;2174:2;;;2222:1;2219;2212:12;2174:2;2265:1;2290:53;2335:7;2326:6;2315:9;2311:22;2290:53;:::i;:::-;2280:63;;2236:117;2164:196;;;;:::o;2366:284::-;;2485:2;2473:9;2464:7;2460:23;2456:32;2453:2;;;2501:1;2498;2491:12;2453:2;2544:1;2569:64;2625:7;2616:6;2605:9;2601:22;2569:64;:::i;:::-;2559:74;;2515:128;2443:207;;;;:::o;2656:118::-;2743:24;2761:5;2743:24;:::i;:::-;2738:3;2731:37;2721:53;;:::o;2780:109::-;2861:21;2876:5;2861:21;:::i;:::-;2856:3;2849:34;2839:50;;:::o;2895:155::-;2994:49;3037:5;2994:49;:::i;:::-;2989:3;2982:62;2972:78;;:::o;3056:364::-;;3172:39;3205:5;3172:39;:::i;:::-;3227:71;3291:6;3286:3;3227:71;:::i;:::-;3220:78;;3307:52;3352:6;3347:3;3340:4;3333:5;3329:16;3307:52;:::i;:::-;3384:29;3406:6;3384:29;:::i;:::-;3379:3;3375:39;3368:46;;3148:272;;;;;:::o;3426:367::-;;3589:67;3653:2;3648:3;3589:67;:::i;:::-;3582:74;;3686:34;3682:1;3677:3;3673:11;3666:55;3752:5;3747:2;3742:3;3738:12;3731:27;3784:2;3779:3;3775:12;3768:19;;3572:221;;;:::o;3799:366::-;;3962:67;4026:2;4021:3;3962:67;:::i;:::-;3955:74;;4059:34;4055:1;4050:3;4046:11;4039:55;4125:4;4120:2;4115:3;4111:12;4104:26;4156:2;4151:3;4147:12;4140:19;;3945:220;;;:::o;4171:370::-;;4334:67;4398:2;4393:3;4334:67;:::i;:::-;4327:74;;4431:34;4427:1;4422:3;4418:11;4411:55;4497:8;4492:2;4487:3;4483:12;4476:30;4532:2;4527:3;4523:12;4516:19;;4317:224;;;:::o;4547:372::-;;4710:67;4774:2;4769:3;4710:67;:::i;:::-;4703:74;;4807:34;4803:1;4798:3;4794:11;4787:55;4873:10;4868:2;4863:3;4859:12;4852:32;4910:2;4905:3;4901:12;4894:19;;4693:226;;;:::o;4925:311::-;;5088:67;5152:2;5147:3;5088:67;:::i;:::-;5081:74;;5185:15;5181:1;5176:3;5172:11;5165:36;5227:2;5222:3;5218:12;5211:19;;5071:165;;;:::o;5242:369::-;;5405:67;5469:2;5464:3;5405:67;:::i;:::-;5398:74;;5502:34;5498:1;5493:3;5489:11;5482:55;5568:7;5563:2;5558:3;5554:12;5547:29;5602:2;5597:3;5593:12;5586:19;;5388:223;;;:::o;5617:368::-;;5780:67;5844:2;5839:3;5780:67;:::i;:::-;5773:74;;5877:34;5873:1;5868:3;5864:11;5857:55;5943:6;5938:2;5933:3;5929:12;5922:28;5976:2;5971:3;5967:12;5960:19;;5763:222;;;:::o;5991:369::-;;6154:67;6218:2;6213:3;6154:67;:::i;:::-;6147:74;;6251:34;6247:1;6242:3;6238:11;6231:55;6317:7;6312:2;6307:3;6303:12;6296:29;6351:2;6346:3;6342:12;6335:19;;6137:223;;;:::o;6366:329::-;;6529:67;6593:2;6588:3;6529:67;:::i;:::-;6522:74;;6626:33;6622:1;6617:3;6613:11;6606:54;6686:2;6681:3;6677:12;6670:19;;6512:183;;;:::o;6701:118::-;6788:24;6806:5;6788:24;:::i;:::-;6783:3;6776:37;6766:53;;:::o;6825:112::-;6908:22;6924:5;6908:22;:::i;:::-;6903:3;6896:35;6886:51;;:::o;6943:222::-;;7074:2;7063:9;7059:18;7051:26;;7087:71;7155:1;7144:9;7140:17;7131:6;7087:71;:::i;:::-;7041:124;;;;:::o;7171:210::-;;7296:2;7285:9;7281:18;7273:26;;7309:65;7371:1;7360:9;7356:17;7347:6;7309:65;:::i;:::-;7263:118;;;;:::o;7387:246::-;;7530:2;7519:9;7515:18;7507:26;;7543:83;7623:1;7612:9;7608:17;7599:6;7543:83;:::i;:::-;7497:136;;;;:::o;7639:313::-;;7790:2;7779:9;7775:18;7767:26;;7839:9;7833:4;7829:20;7825:1;7814:9;7810:17;7803:47;7867:78;7940:4;7931:6;7867:78;:::i;:::-;7859:86;;7757:195;;;;:::o;7958:419::-;;8162:2;8151:9;8147:18;8139:26;;8211:9;8205:4;8201:20;8197:1;8186:9;8182:17;8175:47;8239:131;8365:4;8239:131;:::i;:::-;8231:139;;8129:248;;;:::o;8383:419::-;;8587:2;8576:9;8572:18;8564:26;;8636:9;8630:4;8626:20;8622:1;8611:9;8607:17;8600:47;8664:131;8790:4;8664:131;:::i;:::-;8656:139;;8554:248;;;:::o;8808:419::-;;9012:2;9001:9;8997:18;8989:26;;9061:9;9055:4;9051:20;9047:1;9036:9;9032:17;9025:47;9089:131;9215:4;9089:131;:::i;:::-;9081:139;;8979:248;;;:::o;9233:419::-;;9437:2;9426:9;9422:18;9414:26;;9486:9;9480:4;9476:20;9472:1;9461:9;9457:17;9450:47;9514:131;9640:4;9514:131;:::i;:::-;9506:139;;9404:248;;;:::o;9658:419::-;;9862:2;9851:9;9847:18;9839:26;;9911:9;9905:4;9901:20;9897:1;9886:9;9882:17;9875:47;9939:131;10065:4;9939:131;:::i;:::-;9931:139;;9829:248;;;:::o;10083:419::-;;10287:2;10276:9;10272:18;10264:26;;10336:9;10330:4;10326:20;10322:1;10311:9;10307:17;10300:47;10364:131;10490:4;10364:131;:::i;:::-;10356:139;;10254:248;;;:::o;10508:419::-;;10712:2;10701:9;10697:18;10689:26;;10761:9;10755:4;10751:20;10747:1;10736:9;10732:17;10725:47;10789:131;10915:4;10789:131;:::i;:::-;10781:139;;10679:248;;;:::o;10933:419::-;;11137:2;11126:9;11122:18;11114:26;;11186:9;11180:4;11176:20;11172:1;11161:9;11157:17;11150:47;11214:131;11340:4;11214:131;:::i;:::-;11206:139;;11104:248;;;:::o;11358:419::-;;11562:2;11551:9;11547:18;11539:26;;11611:9;11605:4;11601:20;11597:1;11586:9;11582:17;11575:47;11639:131;11765:4;11639:131;:::i;:::-;11631:139;;11529:248;;;:::o;11783:222::-;;11914:2;11903:9;11899:18;11891:26;;11927:71;11995:1;11984:9;11980:17;11971:6;11927:71;:::i;:::-;11881:124;;;;:::o;12011:332::-;;12170:2;12159:9;12155:18;12147:26;;12183:71;12251:1;12240:9;12236:17;12227:6;12183:71;:::i;:::-;12264:72;12332:2;12321:9;12317:18;12308:6;12264:72;:::i;:::-;12137:206;;;;;:::o;12349:214::-;;12476:2;12465:9;12461:18;12453:26;;12489:67;12553:1;12542:9;12538:17;12529:6;12489:67;:::i;:::-;12443:120;;;;:::o;12569:99::-;;12655:5;12649:12;12639:22;;12628:40;;;:::o;12674:169::-;;12792:6;12787:3;12780:19;12832:4;12827:3;12823:14;12808:29;;12770:73;;;;:::o;12849:305::-;;12908:20;12926:1;12908:20;:::i;:::-;12903:25;;12942:20;12960:1;12942:20;:::i;:::-;12937:25;;13096:1;13028:66;13024:74;13021:1;13018:81;13015:2;;;13102:18;;:::i;:::-;13015:2;13146:1;13143;13139:9;13132:16;;12893:261;;;;:::o;13160:348::-;;13223:20;13241:1;13223:20;:::i;:::-;13218:25;;13257:20;13275:1;13257:20;:::i;:::-;13252:25;;13445:1;13377:66;13373:74;13370:1;13367:81;13362:1;13355:9;13348:17;13344:105;13341:2;;;13452:18;;:::i;:::-;13341:2;13500:1;13497;13493:9;13482:20;;13208:300;;;;:::o;13514:96::-;;13580:24;13598:5;13580:24;:::i;:::-;13569:35;;13559:51;;;:::o;13616:90::-;;13693:5;13686:13;13679:21;13668:32;;13658:48;;;:::o;13712:126::-;;13789:42;13782:5;13778:54;13767:65;;13757:81;;;:::o;13844:77::-;;13910:5;13899:16;;13889:32;;;:::o;13927:86::-;;14002:4;13995:5;13991:16;13980:27;;13970:43;;;:::o;14019:150::-;;14114:49;14157:5;14114:49;:::i;:::-;14101:62;;14091:78;;;:::o;14175:125::-;;14270:24;14288:5;14270:24;:::i;:::-;14257:37;;14247:53;;;:::o;14306:307::-;14374:1;14384:113;14398:6;14395:1;14392:13;14384:113;;;14483:1;14478:3;14474:11;14468:18;14464:1;14459:3;14455:11;14448:39;14420:2;14417:1;14413:10;14408:15;;14384:113;;;14515:6;14512:1;14509:13;14506:2;;;14595:1;14586:6;14581:3;14577:16;14570:27;14506:2;14355:258;;;;:::o;14619:320::-;;14700:1;14694:4;14690:12;14680:22;;14747:1;14741:4;14737:12;14768:18;14758:2;;14824:4;14816:6;14812:17;14802:27;;14758:2;14886;14878:6;14875:14;14855:18;14852:38;14849:2;;;14905:18;;:::i;:::-;14849:2;14670:269;;;;:::o;14945:180::-;14993:77;14990:1;14983:88;15090:4;15087:1;15080:15;15114:4;15111:1;15104:15;15131:180;15179:77;15176:1;15169:88;15276:4;15273:1;15266:15;15300:4;15297:1;15290:15;15317:102;;15409:2;15405:7;15400:2;15393:5;15389:14;15385:28;15375:38;;15365:54;;;:::o;15425:122::-;15498:24;15516:5;15498:24;:::i;:::-;15491:5;15488:35;15478:2;;15537:1;15534;15527:12;15478:2;15468:79;:::o;15553:122::-;15626:24;15644:5;15626:24;:::i;:::-;15619:5;15616:35;15606:2;;15665:1;15662;15655:12;15606:2;15596:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interface/compound.sol\";\n\ncontract EatOutToken is ERC20{\n    CEth public cToken;\n\n    constructor(address _cToken) ERC20(\"Eat Out Coin\", \"EOTC\") {\n        cToken = CEth(_cToken);\n    }\n\n    // for redeem() to work\n    receive() external payable {}\n\n    function supply() external payable {\n        cToken.mint{value: msg.value}();\n        _mint(msg.sender, msg.value * 100);\n    }\n\n    function getExchangeAndSupplyRateInfo() external returns (uint exchangeRate, uint supplyRate) {\n        exchangeRate = cToken.exchangeRateCurrent();\n        supplyRate = cToken.supplyRatePerBlock();\n    }\n\n\n    function getCTokenBalance() external view returns (uint) {\n        return cToken.balanceOf(address(this));\n    }\n\n    function redeem(uint _cTokenAmount) external {\n        require(cToken.redeem(_cTokenAmount) == 0, \"redeem failed\");\n    }\n}",
  "sourcePath": "/Users/yousonghou/Desktop/bc rest client/contracts/EatOutToken.sol",
  "ast": {
    "absolutePath": "/Users/yousonghou/Desktop/bc rest client/contracts/EatOutToken.sol",
    "exportedSymbols": {
      "CEth": [
        204
      ],
      "Context": [
        875
      ],
      "ERC20": [
        750
      ],
      "EatOutToken": [
        101
      ],
      "IERC20": [
        828
      ],
      "IERC20Metadata": [
        853
      ]
    },
    "id": 102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 751,
        "src": "57:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 829,
        "src": "113:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yousonghou/Desktop/bc rest client/contracts/interface/compound.sol",
        "file": "./interface/compound.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 205,
        "src": "170:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 750,
              "src": "230:5:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "230:5:0"
          }
        ],
        "contractDependencies": [
          750,
          828,
          853,
          875
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          750,
          853,
          828,
          875
        ],
        "name": "EatOutToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "69e527da",
            "id": 9,
            "mutability": "mutable",
            "name": "cToken",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "241:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CEth_$204",
              "typeString": "contract CEth"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "CEth",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 204,
                "src": "241:4:0"
              },
              "referencedDeclaration": 204,
              "src": "241:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CEth_$204",
                "typeString": "contract CEth"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "325:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18,
                      "name": "cToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "335:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CEth_$204",
                        "typeString": "contract CEth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20,
                          "name": "_cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "349:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 19,
                        "name": "CEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "344:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CEth_$204_$",
                          "typeString": "type(contract CEth)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "344:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CEth_$204",
                        "typeString": "contract CEth"
                      }
                    },
                    "src": "335:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CEth_$204",
                      "typeString": "contract CEth"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "335:22:0"
                }
              ]
            },
            "id": 25,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456174204f757420436f696e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "301:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7b77aa881d65f427e3b58ed5804b69b88c0fdee2c50aada9d65613c28ffc544e",
                      "typeString": "literal_string \"Eat Out Coin\""
                    },
                    "value": "Eat Out Coin"
                  },
                  {
                    "hexValue": "454f5443",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4a98b34e572cfa86ec7ca64ea0f5e9f9c22388c5a8a2f77e00702ad5011fa769",
                      "typeString": "literal_string \"EOTC\""
                    },
                    "value": "EOTC"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "id": 13,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 750,
                  "src": "295:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "295:29:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "278:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "277:17:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:0:0"
            },
            "scope": 101,
            "src": "266:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "425:2:0",
              "statements": []
            },
            "id": 29,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:0"
            },
            "scope": 101,
            "src": "398:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "468:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 32,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "478:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CEth_$204",
                            "typeString": "contract CEth"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150,
                        "src": "478:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "497:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "497:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "478:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "478:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "525:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "525:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "537:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "537:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "549:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "537:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "519:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "519:34:0"
                }
              ]
            },
            "functionSelector": "047fc9aa",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:0"
            },
            "scope": 101,
            "src": "433:127:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "660:110:0",
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "670:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 58,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "685:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CEth_$204",
                            "typeString": "contract CEth"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeRateCurrent",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 155,
                        "src": "685:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "685:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "670:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "670:43:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "723:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 64,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "736:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CEth_$204",
                            "typeString": "contract CEth"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supplyRatePerBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 160,
                        "src": "736:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "736:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "723:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "723:40:0"
                }
              ]
            },
            "functionSelector": "f2f55e64",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeAndSupplyRateInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "exchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "624:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "643:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:36:0"
            },
            "scope": 101,
            "src": "566:204:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "834:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "876:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EatOutToken_$101",
                              "typeString": "contract EatOutToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EatOutToken_$101",
                              "typeString": "contract EatOutToken"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "868:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "868:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CEth_$204",
                          "typeString": "contract CEth"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 147,
                      "src": "851:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "844:38:0"
                }
              ]
            },
            "functionSelector": "8eae8854",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCTokenBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:2:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "828:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:6:0"
            },
            "scope": 101,
            "src": "777:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "940:76:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "_cTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "972:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 90,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "958:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEth_$204",
                                "typeString": "contract CEth"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 174,
                            "src": "958:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "990:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "958:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72656465656d206661696c6564",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "993:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a85c2fd3c697e7b9b6dca1d790f0a4b7704e289208717f81a559f48b485652e6",
                          "typeString": "literal_string \"redeem failed\""
                        },
                        "value": "redeem failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a85c2fd3c697e7b9b6dca1d790f0a4b7704e289208717f81a559f48b485652e6",
                          "typeString": "literal_string \"redeem failed\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "950:59:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_cTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "911:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:20:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:0:0"
            },
            "scope": 101,
            "src": "895:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 102,
        "src": "206:812:0"
      }
    ],
    "src": "32:986:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/yousonghou/Desktop/bc rest client/contracts/EatOutToken.sol",
    "exportedSymbols": {
      "CEth": [
        204
      ],
      "Context": [
        875
      ],
      "ERC20": [
        750
      ],
      "EatOutToken": [
        101
      ],
      "IERC20": [
        828
      ],
      "IERC20Metadata": [
        853
      ]
    },
    "id": 102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 751,
        "src": "57:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 829,
        "src": "113:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yousonghou/Desktop/bc rest client/contracts/interface/compound.sol",
        "file": "./interface/compound.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 205,
        "src": "170:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 750,
              "src": "230:5:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "230:5:0"
          }
        ],
        "contractDependencies": [
          750,
          828,
          853,
          875
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          750,
          853,
          828,
          875
        ],
        "name": "EatOutToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "69e527da",
            "id": 9,
            "mutability": "mutable",
            "name": "cToken",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "241:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CEth_$204",
              "typeString": "contract CEth"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "CEth",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 204,
                "src": "241:4:0"
              },
              "referencedDeclaration": 204,
              "src": "241:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CEth_$204",
                "typeString": "contract CEth"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "325:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18,
                      "name": "cToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "335:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CEth_$204",
                        "typeString": "contract CEth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20,
                          "name": "_cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "349:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 19,
                        "name": "CEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "344:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CEth_$204_$",
                          "typeString": "type(contract CEth)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "344:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CEth_$204",
                        "typeString": "contract CEth"
                      }
                    },
                    "src": "335:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CEth_$204",
                      "typeString": "contract CEth"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "335:22:0"
                }
              ]
            },
            "id": 25,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456174204f757420436f696e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "301:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7b77aa881d65f427e3b58ed5804b69b88c0fdee2c50aada9d65613c28ffc544e",
                      "typeString": "literal_string \"Eat Out Coin\""
                    },
                    "value": "Eat Out Coin"
                  },
                  {
                    "hexValue": "454f5443",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4a98b34e572cfa86ec7ca64ea0f5e9f9c22388c5a8a2f77e00702ad5011fa769",
                      "typeString": "literal_string \"EOTC\""
                    },
                    "value": "EOTC"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "id": 13,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 750,
                  "src": "295:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "295:29:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "278:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "277:17:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:0:0"
            },
            "scope": 101,
            "src": "266:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "425:2:0",
              "statements": []
            },
            "id": 29,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:0"
            },
            "scope": 101,
            "src": "398:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "468:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 32,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "478:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CEth_$204",
                            "typeString": "contract CEth"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150,
                        "src": "478:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 35,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "497:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "497:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "478:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "478:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "525:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "525:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "537:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "537:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "549:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "537:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "519:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "519:34:0"
                }
              ]
            },
            "functionSelector": "047fc9aa",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:0"
            },
            "scope": 101,
            "src": "433:127:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "660:110:0",
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "670:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 58,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "685:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CEth_$204",
                            "typeString": "contract CEth"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeRateCurrent",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 155,
                        "src": "685:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "685:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "670:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "670:43:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "723:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 64,
                          "name": "cToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "736:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CEth_$204",
                            "typeString": "contract CEth"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supplyRatePerBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 160,
                        "src": "736:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "736:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "723:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "723:40:0"
                }
              ]
            },
            "functionSelector": "f2f55e64",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeAndSupplyRateInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "exchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "624:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "643:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:36:0"
            },
            "scope": 101,
            "src": "566:204:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "834:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 79,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "876:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EatOutToken_$101",
                              "typeString": "contract EatOutToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EatOutToken_$101",
                              "typeString": "contract EatOutToken"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "868:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "868:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 75,
                        "name": "cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CEth_$204",
                          "typeString": "contract CEth"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 147,
                      "src": "851:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 74,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "844:38:0"
                }
              ]
            },
            "functionSelector": "8eae8854",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCTokenBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:2:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "828:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:6:0"
            },
            "scope": 101,
            "src": "777:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "940:76:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "_cTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "972:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 90,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "958:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEth_$204",
                                "typeString": "contract CEth"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 174,
                            "src": "958:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "990:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "958:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72656465656d206661696c6564",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "993:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a85c2fd3c697e7b9b6dca1d790f0a4b7704e289208717f81a559f48b485652e6",
                          "typeString": "literal_string \"redeem failed\""
                        },
                        "value": "redeem failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a85c2fd3c697e7b9b6dca1d790f0a4b7704e289208717f81a559f48b485652e6",
                          "typeString": "literal_string \"redeem failed\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "950:59:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_cTokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "911:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:20:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:0:0"
            },
            "scope": 101,
            "src": "895:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 102,
        "src": "206:812:0"
      }
    ],
    "src": "32:986:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC4a520a00fCae582982B280Fd2383638a7CafFF2",
      "transactionHash": "0xce69c65d2cbd33e8e7aca3f5150bf98a492533beaf040f12ab3857cc989a398e"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-09-08T23:40:32.796Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}